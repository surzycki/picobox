c
"#{subject.os.to_s}"
"#{subject.os}"
subject.os
"visit_#{subject.os}"
"visit_#{subject.os}".intern
c
subject.os.name
subject.os.class
subject.os
exit
exut
subject.os::DOCKER_FILENAME
subject.os
exit
"visit_#{subject.os}"
subject.os.inspect
subject.os.to_s
"visit_#{subject.os}"
exit
subject.os.new.inspect
subject.os.new
"visit_#{subject.os}"
subject.os
exit
subject.os
subject.os.name
subject.os
subject.os.class_name
subject.os.classname
subject.os.class.name
subject.os.name
subject.os.class
subject.os
c
s
c
accept(Picobox::Commands::DownloadDocker.new)
s
c
n
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb'].each    {|file| require file }
n
c
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb'].each    {|file| require file }
c
include Picobox::Utils::Visitable
include Picobox::Utils
include Picobox
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb'].each    {|file| require file }
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb']
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb'].
c
Dir[File.dirname(__FILE__) + '/lib/picobox/commands/*.rb'].each {|file| require file }
Dir[File.dirname(__FILE__) + '/lib/picobox/os/*.rb'].each       {|file| require file }
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb'].each    {|file| require file }
Dir[File.dirname(__FILE__) + '/lib/picobox/utils/*.rb']
Dir[File.dirname(__FILE__) + 'picobox/utils/*.rb']
Dir[File.dirname(__FILE__) + '/picobox/utils/*.rb']
Dir[File.dirname(__FILE__) + '/picobox/utils/*.rb'].each    {|file| require file }
Dir[File.dirname(__FILE__) + 'utils/*.rb'].each    {|file| require file }
Dir[File.dirname(__FILE__) + '/os/*.rb'].each       {|file| require file }
__FILE__
pwd
File.dirname(__FILE__) + '/utils/*.rb'
File.dirname(__FILE__)
Dir[File.dirname(__FILE__) + '/utils/*.rb']
c
thread.join
thread[:length]
c
url_base
url_url_base
url_path
c
require "aruba/turnip/command"
c
require 'turnip_helper'
require 'turnip/rspec'
require 'aruba/turnip'
